name: Build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target: [SM-T225]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up build environment
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
            attr ccache clang golang libbrotli-dev \
            libgtest-dev libprotobuf-dev libunwind-dev libusb-1.0-0-dev libzstd-dev \
            linux-modules-extra-$(uname -r) build-essential lld ninja-build protobuf-compiler zipalign gcc-aarch64-linux-gnu libc6-dev libarchive-tools
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Fetch Neutron Clang and Patch glibc
        run: |
          export KERNEL_DIR="$(pwd)"
          mkdir -p "$HOME/toolchains/neutron-clang"; cd "$HOME/toolchains/neutron-clang"
          curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"; chmod +x antman; ./antman -S; ./antman --patch=glibc
          cd "$KERNEL_DIR"

      - name: Build Kernel Clean
        run: |
          source ./build_script.sh 

      - name: Format Date
        id: format_date
        run: echo "bucharest_time=$(TZ='Europe/Bucharest' date +'%Y-%m-%d %T %Z')" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: Kernel_${{ github.run_number }}-${{ matrix.target }}-artifacts
          path: |
           ./out/arch/arm64/boot/Image
          compression-level: 0
 
